# `test_nonzero` name conflict
array_api_tests/test_searching_functions.py::test_nonzero_zerodim_error
# flaky test
array_api_tests/test_special_cases.py::test_unary[sign((x_i is -0 or x_i == +0)) -> 0]
# `broadcast_to` is not defined in Finch, hangs as xfail
array_api_tests/test_searching_functions.py::test_where
# `test_solve` is not defined in Finch, hangs as xfail
array_api_tests/test_linalg.py::test_solve

# test_signatures

# not implemented
# stats functions
array_api_tests/test_signatures.py::test_func_signature[mean]
array_api_tests/test_signatures.py::test_func_signature[std]
array_api_tests/test_signatures.py::test_func_signature[var]
# set functions
array_api_tests/test_signatures.py::test_func_signature[unique_all]
array_api_tests/test_signatures.py::test_func_signature[unique_counts]
array_api_tests/test_signatures.py::test_func_signature[unique_inverse]
array_api_tests/test_signatures.py::test_func_signature[unique_values]
# creation functions
array_api_tests/test_signatures.py::test_func_signature[meshgrid]
array_api_tests/test_signatures.py::test_func_signature[tril]
array_api_tests/test_signatures.py::test_func_signature[triu]
# inspection functions
array_api_tests/test_signatures.py::test_func_signature[isdtype]
array_api_tests/test_signatures.py::test_func_signature[result_type]
# other functions
array_api_tests/test_signatures.py::test_func_signature[concat]
array_api_tests/test_signatures.py::test_func_signature[argsort]
array_api_tests/test_signatures.py::test_func_signature[sort]
array_api_tests/test_signatures.py::test_func_signature[broadcast_arrays]
array_api_tests/test_signatures.py::test_func_signature[broadcast_to]
array_api_tests/test_signatures.py::test_func_signature[expand_dims]
array_api_tests/test_signatures.py::test_func_signature[flip]
array_api_tests/test_signatures.py::test_func_signature[roll]
array_api_tests/test_signatures.py::test_func_signature[squeeze]
array_api_tests/test_signatures.py::test_func_signature[stack]
array_api_tests/test_signatures.py::test_func_signature[matrix_transpose]
array_api_tests/test_signatures.py::test_func_signature[vecdot]
array_api_tests/test_signatures.py::test_func_signature[take]
array_api_tests/test_signatures.py::test_func_signature[argmax]
array_api_tests/test_signatures.py::test_func_signature[argmin]
array_api_tests/test_signatures.py::test_func_signature[from_dlpack]
array_api_tests/test_signatures.py::test_func_signature[cumulative_sum]
array_api_tests/test_signatures.py::test_func_signature[searchsorted]
array_api_tests/test_signatures.py::test_func_signature[repeat]
array_api_tests/test_signatures.py::test_func_signature[tile]
array_api_tests/test_signatures.py::test_func_signature[unstack]
array_api_tests/test_signatures.py::test_func_signature[clip]
array_api_tests/test_signatures.py::test_func_signature[copysign]
array_api_tests/test_signatures.py::test_func_signature[hypot]
array_api_tests/test_signatures.py::test_func_signature[logical_not]
array_api_tests/test_signatures.py::test_func_signature[maximum]
array_api_tests/test_signatures.py::test_func_signature[minimum]
array_api_tests/test_signatures.py::test_func_signature[signbit]
array_api_tests/test_signatures.py::test_func_signature[nextafter]
array_api_tests/test_signatures.py::test_func_signature[reciprocal]
array_api_tests/test_signatures.py::test_func_signature[count_nonzero]
array_api_tests/test_signatures.py::test_func_signature[take_along_axis]
array_api_tests/test_signatures.py::test_func_signature[astype]
array_api_tests/test_signatures.py::test_func_signature[cumulative_prod]
array_api_tests/test_signatures.py::test_func_signature[diff]
# linalg namespace
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.cross]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.matmul]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.cholesky]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.matrix_norm]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.matrix_rank]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.matrix_transpose]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.outer]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.pinv]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.svdvals]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.tensordot]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.vecdot]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.det]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.diagonal]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.eigh]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.eigvalsh]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.inv]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.matrix_power]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.qr]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.slogdet]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.solve]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.svd]
array_api_tests/test_signatures.py::test_extension_func_signature[linalg.trace]
# Array object namespace
array_api_tests/test_signatures.py::test_array_method_signature[__dlpack__]
array_api_tests/test_signatures.py::test_array_method_signature[__dlpack_device__]
array_api_tests/test_signatures.py::test_array_method_signature[__setitem__]

array_api_tests/test_creation_functions.py::test_eye
# not implemented
array_api_tests/test_creation_functions.py::test_meshgrid
array_api_tests/test_creation_functions.py::test_empty_like

# test_array_object

array_api_tests/test_array_object.py::test_getitem
array_api_tests/test_array_object.py::test_setitem
array_api_tests/test_array_object.py::test_getitem_masking
array_api_tests/test_array_object.py::test_setitem_masking
array_api_tests/test_array_object.py::test_getitem_arrays_and_ints_2[None]
array_api_tests/test_array_object.py::test_getitem_arrays_and_ints_2[1]
array_api_tests/test_array_object.py::test_getitem_arrays_and_ints_1[None]
array_api_tests/test_array_object.py::test_getitem_arrays_and_ints_1[1]

# test_operators_and_elementwise_functions

# throws for x < 1 instead of NaN
array_api_tests/test_operators_and_elementwise_functions.py::test_acosh
# not implemented
array_api_tests/test_operators_and_elementwise_functions.py::test_logical_not
array_api_tests/test_operators_and_elementwise_functions.py::test_binary_with_scalars_real[logaddexp]
array_api_tests/test_operators_and_elementwise_functions.py::test_binary_with_scalars_real[maximum]
array_api_tests/test_operators_and_elementwise_functions.py::test_binary_with_scalars_real[minimum]
array_api_tests/test_operators_and_elementwise_functions.py::test_copysign
array_api_tests/test_operators_and_elementwise_functions.py::test_clip
array_api_tests/test_operators_and_elementwise_functions.py::test_hypot
array_api_tests/test_operators_and_elementwise_functions.py::test_maximum
array_api_tests/test_operators_and_elementwise_functions.py::test_minimum
array_api_tests/test_operators_and_elementwise_functions.py::test_floor_divide[__ifloordiv__(x1, x2)]
array_api_tests/test_operators_and_elementwise_functions.py::test_floor_divide[floor_divide(x1, x2)]
array_api_tests/test_operators_and_elementwise_functions.py::test_floor_divide[__ifloordiv__(x, s)]
array_api_tests/test_operators_and_elementwise_functions.py::test_floor_divide[__floordiv__(x, s)]
array_api_tests/test_operators_and_elementwise_functions.py::test_reciprocal
array_api_tests/test_operators_and_elementwise_functions.py::test_binary_with_scalars_real[copysign]
array_api_tests/test_operators_and_elementwise_functions.py::test_binary_with_scalars_real[hypot]
array_api_tests/test_operators_and_elementwise_functions.py::test_binary_with_scalars_int[remainder]
array_api_tests/test_operators_and_elementwise_functions.py::test_binary_with_scalars_int[floor_divide]
array_api_tests/test_operators_and_elementwise_functions.py::test_signbit

# test_data_type_functions

# not implemented
array_api_tests/test_data_type_functions.py::test_broadcast_arrays
array_api_tests/test_data_type_functions.py::test_broadcast_to
array_api_tests/test_data_type_functions.py::test_isdtype
array_api_tests/test_data_type_functions.py::test_result_type
array_api_tests/test_data_type_functions.py::test_finfo[Float32]
array_api_tests/test_data_type_functions.py::TestResultType::test_with_scalars
array_api_tests/test_data_type_functions.py::TestResultType::test_result_type
array_api_tests/test_data_type_functions.py::TestResultType::test_shuffled
array_api_tests/test_searching_functions.py::test_searchsorted
array_api_tests/test_data_type_functions.py::test_astype
array_api_tests/test_data_type_functions.py::TestResultType::test_arrays_and_dtypes

# test_has_names

array_api_tests/test_has_names.py::test_has_names[linalg-cholesky]
array_api_tests/test_has_names.py::test_has_names[linalg-cross]
array_api_tests/test_has_names.py::test_has_names[linalg-det]
array_api_tests/test_has_names.py::test_has_names[linalg-diagonal]
array_api_tests/test_has_names.py::test_has_names[linalg-eigh]
array_api_tests/test_has_names.py::test_has_names[linalg-eigvalsh]
array_api_tests/test_has_names.py::test_has_names[linalg-inv]
array_api_tests/test_has_names.py::test_has_names[linalg-matmul]
array_api_tests/test_has_names.py::test_has_names[linalg-matrix_norm]
array_api_tests/test_has_names.py::test_has_names[linalg-matrix_power]
array_api_tests/test_has_names.py::test_has_names[linalg-matrix_rank]
array_api_tests/test_has_names.py::test_has_names[linalg-matrix_transpose]
array_api_tests/test_has_names.py::test_has_names[linalg-outer]
array_api_tests/test_has_names.py::test_has_names[linalg-pinv]
array_api_tests/test_has_names.py::test_has_names[linalg-qr]
array_api_tests/test_has_names.py::test_has_names[linalg-slogdet]
array_api_tests/test_has_names.py::test_has_names[linalg-solve]
array_api_tests/test_has_names.py::test_has_names[linalg-svd]
array_api_tests/test_has_names.py::test_has_names[linalg-svdvals]
array_api_tests/test_has_names.py::test_has_names[linalg-tensordot]
array_api_tests/test_has_names.py::test_has_names[linalg-trace]
array_api_tests/test_has_names.py::test_has_names[linalg-vecdot]
array_api_tests/test_has_names.py::test_has_names[statistical-cumulative_sum]
array_api_tests/test_has_names.py::test_has_names[statistical-mean]
array_api_tests/test_has_names.py::test_has_names[statistical-std]
array_api_tests/test_has_names.py::test_has_names[statistical-var]
array_api_tests/test_has_names.py::test_has_names[set-unique_all]
array_api_tests/test_has_names.py::test_has_names[set-unique_counts]
array_api_tests/test_has_names.py::test_has_names[set-unique_inverse]
array_api_tests/test_has_names.py::test_has_names[set-unique_values]
array_api_tests/test_has_names.py::test_has_names[searching-argmax]
array_api_tests/test_has_names.py::test_has_names[searching-argmin]
array_api_tests/test_has_names.py::test_has_names[searching-searchsorted]
array_api_tests/test_has_names.py::test_has_names[creation-from_dlpack]
array_api_tests/test_has_names.py::test_has_names[creation-meshgrid]
array_api_tests/test_has_names.py::test_has_names[creation-tril]
array_api_tests/test_has_names.py::test_has_names[creation-triu]
array_api_tests/test_has_names.py::test_has_names[manipulation-broadcast_arrays]
array_api_tests/test_has_names.py::test_has_names[manipulation-broadcast_to]
array_api_tests/test_has_names.py::test_has_names[manipulation-concat]
array_api_tests/test_has_names.py::test_has_names[manipulation-expand_dims]
array_api_tests/test_has_names.py::test_has_names[manipulation-flip]
array_api_tests/test_has_names.py::test_has_names[manipulation-repeat]
array_api_tests/test_has_names.py::test_has_names[manipulation-roll]
array_api_tests/test_has_names.py::test_has_names[manipulation-squeeze]
array_api_tests/test_has_names.py::test_has_names[manipulation-stack]
array_api_tests/test_has_names.py::test_has_names[manipulation-tile]
array_api_tests/test_has_names.py::test_has_names[manipulation-unstack]
array_api_tests/test_has_names.py::test_has_names[sorting-argsort]
array_api_tests/test_has_names.py::test_has_names[sorting-sort]
array_api_tests/test_has_names.py::test_has_names[data_type-isdtype]
array_api_tests/test_has_names.py::test_has_names[data_type-result_type]
array_api_tests/test_has_names.py::test_has_names[elementwise-clip]
array_api_tests/test_has_names.py::test_has_names[elementwise-copysign]
array_api_tests/test_has_names.py::test_has_names[elementwise-hypot]
array_api_tests/test_has_names.py::test_has_names[elementwise-logical_not]
array_api_tests/test_has_names.py::test_has_names[elementwise-maximum]
array_api_tests/test_has_names.py::test_has_names[elementwise-minimum]
array_api_tests/test_has_names.py::test_has_names[elementwise-signbit]
array_api_tests/test_has_names.py::test_has_names[linear_algebra-matrix_transpose]
array_api_tests/test_has_names.py::test_has_names[linear_algebra-vecdot]
array_api_tests/test_has_names.py::test_has_names[indexing-take]
array_api_tests/test_has_names.py::test_has_names[array_method-__dlpack__]
array_api_tests/test_has_names.py::test_has_names[array_method-__dlpack_device__]
array_api_tests/test_has_names.py::test_has_names[array_method-__setitem__]
array_api_tests/test_has_names.py::test_has_names[array_attribute-T]
array_api_tests/test_has_names.py::test_has_names[fft-irfft]
array_api_tests/test_has_names.py::test_has_names[fft-ifft]
array_api_tests/test_has_names.py::test_has_names[fft-rfftfreq]
array_api_tests/test_has_names.py::test_has_names[fft-ifftshift]
array_api_tests/test_has_names.py::test_has_names[fft-ihfft]
array_api_tests/test_has_names.py::test_has_names[fft-ifftn]
array_api_tests/test_has_names.py::test_has_names[fft-irfftn]
array_api_tests/test_has_names.py::test_has_names[elementwise-nextafter]
array_api_tests/test_has_names.py::test_has_names[fft-fft]
array_api_tests/test_has_names.py::test_has_names[fft-rfftn]
array_api_tests/test_has_names.py::test_has_names[fft-fftn]
array_api_tests/test_has_names.py::test_has_names[fft-fftshift]
array_api_tests/test_has_names.py::test_has_names[fft-fftfreq]
array_api_tests/test_has_names.py::test_has_names[fft-hfft]
array_api_tests/test_has_names.py::test_has_names[fft-rfft]
array_api_tests/test_has_names.py::test_has_names[elementwise-reciprocal]
array_api_tests/test_has_names.py::test_has_names[utility-diff]
array_api_tests/test_has_names.py::test_has_names[statistical-cumulative_prod]
array_api_tests/test_has_names.py::test_has_names[searching-count_nonzero]
array_api_tests/test_has_names.py::test_has_names[indexing-take_along_axis]

# test_indexing_functions

# not implemented
array_api_tests/test_indexing_functions.py::test_take

# test_linalg

# not implemented
array_api_tests/test_linalg.py::test_matrix_transpose
array_api_tests/test_linalg.py::test_vecdot
array_api_tests/test_linalg.py::test_eigh
array_api_tests/test_linalg.py::test_eigvalsh
array_api_tests/test_linalg.py::test_inv
array_api_tests/test_linalg.py::test_linalg_matmul
array_api_tests/test_linalg.py::test_matrix_norm
array_api_tests/test_linalg.py::test_matrix_power
array_api_tests/test_linalg.py::test_matrix_rank
array_api_tests/test_linalg.py::test_linalg_matrix_transpose
array_api_tests/test_linalg.py::test_outer
array_api_tests/test_linalg.py::test_pinv
array_api_tests/test_linalg.py::test_qr
array_api_tests/test_linalg.py::test_slogdet
array_api_tests/test_linalg.py::test_cholesky
array_api_tests/test_linalg.py::test_det
array_api_tests/test_linalg.py::test_diagonal
array_api_tests/test_linalg.py::test_vector_norm
array_api_tests/test_linalg.py::test_svdvals
array_api_tests/test_linalg.py::test_svd
array_api_tests/test_linalg.py::test_trace
array_api_tests/test_linalg.py::test_linalg_vecdot
array_api_tests/test_linalg.py::test_linalg_tensordot
array_api_tests/test_linalg.py::test_vecdot_conj
array_api_tests/test_linalg.py::test_tensordot

# test_manipulation_functions

# not implemented
array_api_tests/test_manipulation_functions.py::test_concat
array_api_tests/test_manipulation_functions.py::test_expand_dims
array_api_tests/test_manipulation_functions.py::test_squeeze
array_api_tests/test_manipulation_functions.py::test_flip
array_api_tests/test_manipulation_functions.py::test_roll
array_api_tests/test_manipulation_functions.py::test_stack
array_api_tests/test_manipulation_functions.py::test_unstack
array_api_tests/test_manipulation_functions.py::test_repeat
array_api_tests/test_manipulation_functions.py::test_tile

# test_searching_functions

# not implemented
array_api_tests/test_searching_functions.py::test_argmax
array_api_tests/test_searching_functions.py::test_argmin
array_api_tests/test_searching_functions.py::test_count_nonzero
# 0D issue
array_api_tests/test_searching_functions.py::test_nonzero

# test_set_functions

# not implemented
array_api_tests/test_set_functions.py::test_unique_all
array_api_tests/test_set_functions.py::test_unique_counts
array_api_tests/test_set_functions.py::test_unique_inverse
array_api_tests/test_set_functions.py::test_unique_values

# test_sorting_functions

# not implemented
array_api_tests/test_sorting_functions.py::test_argsort
array_api_tests/test_sorting_functions.py::test_sort

# test_special_cases

array_api_tests/test_special_cases.py::test_unary[acos(x_i > 1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[acos(x_i < -1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[acosh(x_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_unary[acosh(x_i < 1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[acosh(x_i is 1) -> +0]
array_api_tests/test_special_cases.py::test_unary[acosh(x_i is +infinity) -> +infinity]
array_api_tests/test_special_cases.py::test_unary[asin(x_i > 1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[asin(x_i < -1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[atanh(x_i < -1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[atanh(x_i > 1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[cos(x_i is +infinity) -> NaN]
array_api_tests/test_special_cases.py::test_unary[cos(x_i is -infinity) -> NaN]
array_api_tests/test_special_cases.py::test_unary[log(x_i < 0) -> NaN]
array_api_tests/test_special_cases.py::test_unary[log1p(x_i < -1) -> NaN]
array_api_tests/test_special_cases.py::test_unary[log2(x_i < 0) -> NaN]
array_api_tests/test_special_cases.py::test_unary[log10(x_i < 0) -> NaN]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is +0) -> False]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is -0) -> True]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is +infinity) -> False]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is -infinity) -> True]
array_api_tests/test_special_cases.py::test_unary[signbit(isfinite(x_i) and x_i > 0) -> False]
array_api_tests/test_special_cases.py::test_unary[signbit(isfinite(x_i) and x_i < 0) -> True]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is NaN) -> False]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is NaN) -> True]
array_api_tests/test_special_cases.py::test_unary[sin((x_i is +infinity or x_i == -infinity)) -> NaN]
array_api_tests/test_special_cases.py::test_unary[sqrt(x_i < 0) -> NaN]
array_api_tests/test_special_cases.py::test_unary[tan((x_i is +infinity or x_i == -infinity)) -> NaN]
array_api_tests/test_special_cases.py::test_binary[copysign(x2_i < 0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[copysign(x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[copysign(x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[copysign(x2_i > 0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[maximum(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_binary[minimum(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_binary[pow(x1_i is -infinity and x2_i > 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[pow(x1_i is -infinity and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
array_api_tests/test_special_cases.py::test_binary[pow(x1_i is -0 and x2_i > 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
array_api_tests/test_special_cases.py::test_binary[pow(x1_i < 0 and isfinite(x1_i) and isfinite(x2_i) and not x2_i.is_integer()) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__pow__(x1_i < 0 and isfinite(x1_i) and isfinite(x2_i) and not x2_i.is_integer()) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__pow__(x1_i is -infinity and x2_i > 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[__pow__(x1_i is -infinity and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
array_api_tests/test_special_cases.py::test_binary[__pow__(x1_i is -0 and x2_i > 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
array_api_tests/test_special_cases.py::test_binary[copysign(x1_i is NaN and x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[copysign(x1_i is NaN and x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is +0 and x2_i is -0) -> roughly +pi]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i > 0 and x2_i is +0) -> roughly +pi/2]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is -0 and x2_i is -0) -> roughly -pi]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is +infinity and x2_i is -infinity) -> roughly +3pi/4]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is -infinity and x2_i is +infinity) -> roughly -pi/4]
array_api_tests/test_special_cases.py::test_binary[copysign(x1_i is NaN and x2_i > 0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is -infinity and x2_i is -infinity) -> roughly -3pi/4]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is -infinity and isfinite(x2_i)) -> roughly -pi/2]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is -0 and x2_i < 0) -> roughly -pi]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i > 0 and isfinite(x1_i) and x2_i is -infinity) -> roughly +pi]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i < 0 and isfinite(x1_i) and x2_i is -infinity) -> roughly -pi]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is +infinity and isfinite(x2_i)) -> roughly +pi/2]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is +infinity and x2_i is +infinity) -> roughly +pi/4]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i > 0 and x2_i is -0) -> roughly +pi/2]
array_api_tests/test_special_cases.py::test_binary[copysign(x1_i is NaN and x2_i < 0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i < 0 and x2_i is +0) -> roughly -pi/2]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i is +0 and x2_i < 0) -> roughly +pi]
array_api_tests/test_special_cases.py::test_binary[atan2(x1_i < 0 and x2_i is -0) -> roughly -pi/2]
array_api_tests/test_special_cases.py::test_binary[floor_divide((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i is -infinity and isfinite(x2_i) and x2_i > 0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i is -infinity and isfinite(x2_i) and x2_i < 0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i is +infinity and isfinite(x2_i) and x2_i < 0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i is +infinity and isfinite(x2_i) and x2_i > 0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(isfinite(x1_i) and x1_i < 0 and x2_i is +infinity) -> -0]
array_api_tests/test_special_cases.py::test_binary[floor_divide(isfinite(x1_i) and x1_i < 0 and x2_i is -infinity) -> +0]
array_api_tests/test_special_cases.py::test_binary[floor_divide(isfinite(x1_i) and x1_i > 0 and x2_i is -infinity) -> -0]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i > 0 and x2_i is -0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i < 0 and x2_i is -0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i < 0 and x2_i is +0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i > 0 and x2_i is +0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i is -0 and x2_i < 0) -> +0]
array_api_tests/test_special_cases.py::test_binary[floor_divide(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_binary[remainder(x1_i > 0 and x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[remainder(x1_i < 0 and x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[remainder(x1_i > 0 and x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[remainder(x1_i < 0 and x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[remainder(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_binary[remainder((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__mod__(x1_i < 0 and x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__mod__(x1_i < 0 and x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__mod__(x1_i > 0 and x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__mod__(x1_i > 0 and x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__mod__(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__mod__((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__floordiv__((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(isfinite(x1_i) and x1_i < 0 and x2_i is -infinity) -> +0]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(isfinite(x1_i) and x1_i < 0 and x2_i is +infinity) -> -0]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(isfinite(x1_i) and x1_i > 0 and x2_i is -infinity) -> -0]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i is +infinity and isfinite(x2_i) and x2_i < 0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i is -infinity and isfinite(x2_i) and x2_i > 0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i is +infinity and isfinite(x2_i) and x2_i > 0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i is -infinity and isfinite(x2_i) and x2_i < 0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i < 0 and x2_i is +0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i < 0 and x2_i is -0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i > 0 and x2_i is -0) -> -infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i > 0 and x2_i is +0) -> +infinity]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_binary[__floordiv__(x1_i is -0 and x2_i < 0) -> +0]
array_api_tests/test_special_cases.py::test_binary[nextafter(x1_i is +0 and x2_i is -0) -> -0]
array_api_tests/test_special_cases.py::test_binary[nextafter(x1_i is -0 and x2_i is +0) -> +0]
array_api_tests/test_special_cases.py::test_binary[nextafter(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i is -infinity and x2_i > 0 and not (x2_i.is_integer() and x2_i % 2 == 1)) -> +infinity]
array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i is -infinity and x2_i < 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i is -0 and x2_i > 0 and x2_i.is_integer() and x2_i % 2 == 1) -> -0]
array_api_tests/test_special_cases.py::test_iop[__ipow__(x1_i < 0 and isfinite(x1_i) and isfinite(x2_i) and not x2_i.is_integer()) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__imod__(x1_i < 0 and x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__imod__(x1_i > 0 and x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__imod__(x1_i < 0 and x2_i is -0) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__imod__(x1_i > 0 and x2_i is +0) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__imod__(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__imod__((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i is -infinity and isfinite(x2_i) and x2_i < 0) -> +infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i is +infinity and isfinite(x2_i) and x2_i < 0) -> -infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i is +infinity and isfinite(x2_i) and x2_i > 0) -> +infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i is -infinity and isfinite(x2_i) and x2_i > 0) -> -infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__((x1_i is +0 or x1_i == -0) and (x2_i is +0 or x2_i == -0)) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(isfinite(x1_i) and x1_i < 0 and x2_i is +infinity) -> -0]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(isfinite(x1_i) and x1_i < 0 and x2_i is -infinity) -> +0]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(isfinite(x1_i) and x1_i > 0 and x2_i is -infinity) -> -0]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i > 0 and x2_i is -0) -> -infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i < 0 and x2_i is -0) -> +infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i < 0 and x2_i is +0) -> -infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i > 0 and x2_i is +0) -> +infinity]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i is NaN or x2_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_iop[__ifloordiv__(x1_i is -0 and x2_i < 0) -> +0]
array_api_tests/test_special_cases.py::test_empty_arrays[mean]
array_api_tests/test_special_cases.py::test_empty_arrays[std]
array_api_tests/test_special_cases.py::test_empty_arrays[var]
array_api_tests/test_special_cases.py::test_nan_propagation[cumulative_sum]
array_api_tests/test_special_cases.py::test_nan_propagation[max]
array_api_tests/test_special_cases.py::test_nan_propagation[mean]
array_api_tests/test_special_cases.py::test_nan_propagation[min]
array_api_tests/test_special_cases.py::test_nan_propagation[prod]
array_api_tests/test_special_cases.py::test_nan_propagation[std]
array_api_tests/test_special_cases.py::test_nan_propagation[sum]
array_api_tests/test_special_cases.py::test_nan_propagation[var]
array_api_tests/test_special_cases.py::test_unary[clip(x_i is NaN) -> NaN]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is +NaN) -> False]
array_api_tests/test_special_cases.py::test_unary[signbit(x_i is -NaN) -> True]

# test_statistical_functions

# check for errors
array_api_tests/test_statistical_functions.py::test_sum

# not implemented
array_api_tests/test_statistical_functions.py::test_mean
array_api_tests/test_statistical_functions.py::test_cumulative_prod
array_api_tests/test_statistical_functions.py::test_cumulative_sum
